diff --git a/display/fbdev.c b/display/fbdev.c
index fe8d2ff..2f056c8 100644
--- a/display/fbdev.c
+++ b/display/fbdev.c
@@ -140,6 +140,28 @@ void fbdev_init(void)
         perror("Error reading variable information");
         return;
     }
+
+    /* printf("Original config: %dx%d (v: %dx%d), %dbpp, rotate: %d\n", vinfo.xres, vinfo.yres,  */
+    /*         vinfo.xres_virtual, vinfo.yres_virtual, vinfo.bits_per_pixel, vinfo.rotate); */
+
+    /* int rotation = 270; */
+    /* if((vinfo.rotate ^ rotation) & 1) { */
+    /*   unsigned int xres = vinfo.yres; */
+    /*   vinfo.yres = vinfo.xres; */
+    /*   vinfo.xres = xres; */
+    /*   vinfo.xres_virtual = vinfo.xres; */
+    /*   vinfo.yres_virtual = vinfo.yres * 2; */
+    /*   if(vinfo.yoffset == xres) */
+    /* 	vinfo.yoffset = vinfo.yres; */
+    /* } */
+    /* vinfo.rotate = rotation;  */
+    /* if (ioctl(fbfd, FBIOPUT_VSCREENINFO, &vinfo) == -1) { */
+    /*   perror("Failed to rotate framebuffer"); */
+    /* } */
+
+    /* printf("new config: %dx%d (v: %dx%d), %dbpp, rotate: %d\n", vinfo.xres, vinfo.yres,  */
+    /* 	   vinfo.xres_virtual, vinfo.yres_virtual, vinfo.bits_per_pixel, vinfo.rotate); */
+
 #endif /* USE_BSD_FBDEV */
 
     LV_LOG_INFO("%dx%d, %dbpp", vinfo.xres, vinfo.yres, vinfo.bits_per_pixel);
@@ -166,6 +188,30 @@ void fbdev_exit(void)
     close(fbfd);
 }
 
+void fbdev_blank(void) {
+  if (ioctl(fbfd, FBIOBLANK, FB_BLANK_NORMAL) == -1) {
+    LV_LOG_INFO("Failed to blank display");
+  }
+}
+
+void fbdev_unblank(void) {
+  struct fb_var_screeninfo var_info;
+  if (ioctl(fbfd, FBIOBLANK, FB_BLANK_UNBLANK) == -1) {
+    LV_LOG_INFO("Failed to unblank display");
+  }
+
+  if (ioctl(fbfd, FBIOGET_VSCREENINFO, &var_info) == -1) {
+    LV_LOG_INFO("Failed to fetch screen info");
+  }
+
+  var_info.yoffset = 0;
+
+  if (ioctl(fbfd, FBIOPAN_DISPLAY, &var_info) == -1) {
+    LV_LOG_INFO("Failed to pan display");
+  }
+}
+
+
 /**
  * Flush a buffer to the marked area
  * @param drv pointer to driver where this function belongs
diff --git a/display/fbdev.h b/display/fbdev.h
index b7f2c81..5e91f91 100644
--- a/display/fbdev.h
+++ b/display/fbdev.h
@@ -42,6 +42,8 @@ extern "C" {
  **********************/
 void fbdev_init(void);
 void fbdev_exit(void);
+void fbdev_blank(void);
+void fbdev_unblank(void);
 void fbdev_flush(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p);
 void fbdev_get_sizes(uint32_t *width, uint32_t *height, uint32_t *dpi);
 /**
