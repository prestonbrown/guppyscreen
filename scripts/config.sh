#!/bin/bash

# GuppyScreen Build Configuration Script
# Interactive menu to configure build target and options

CONFIG_FILE=".config"
CONFIG_EXAMPLE=".config.example"

# Colors for better UX
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_header() {
    echo -e "${BLUE}╔════════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}║     GuppyScreen Build Configuration       ║${NC}"
    echo -e "${BLUE}╚════════════════════════════════════════════╝${NC}"
    echo ""
}

print_current_config() {
    if [ -f "$CONFIG_FILE" ]; then
        echo -e "${YELLOW}Current configuration:${NC}"
        cat "$CONFIG_FILE" | sed 's/^/  /'
        echo ""
    fi
}

select_target() {
    echo -e "${GREEN}Select target hardware:${NC}"
    echo ""
    echo "  1) simulator     - macOS/Linux development (default)"
    echo "                     • SDL2-based virtual display"
    echo "                     • Connect to remote or local virtual Moonraker"
    echo "                     • Standard Klipper commands"
    echo ""
    echo "  2) pi            - Raspberry Pi / BTT Pad / Debian ARM"
    echo "                     • Native build on ARM device"
    echo "                     • Framebuffer display (no X11)"
    echo "                     • Standard Klipper commands"
    echo "                     • Includes TMC stepper motor tuning"
    echo ""
    echo "  3) k1            - Creality K1/K1 Max printers"
    echo "                     • MIPS cross-compilation"
    echo "                     • Static linking for embedded system"
    echo "                     • Includes TMC stepper motor tuning"
    echo ""
    echo "  4) flashforge    - FlashForge Adventurer 5M/Pro"
    echo "                     • ARM cross-compilation"
    echo "                     • Universal input device (/dev/input/guppy)"
    echo "                     • Custom AUTO_FULL_BED_LEVEL macro"
    echo "                     • TMC panels disabled (hardware limitation)"
    echo ""

    while true; do
        read -p "Choice [1-4]: " choice
        case $choice in
            1)
                TARGET="simulator"
                break
                ;;
            2)
                TARGET="pi"
                break
                ;;
            3)
                TARGET="k1"
                break
                ;;
            4)
                TARGET="flashforge"
                break
                ;;
            *)
                echo -e "${RED}Invalid choice. Please enter 1, 2, 3, or 4.${NC}"
                ;;
        esac
    done
}

save_config() {
    cat > "$CONFIG_FILE" << EOF
# GuppyScreen Build Configuration
# Generated by: make config
#
# Valid TARGET values: simulator, k1, flashforge
TARGET=$TARGET
EOF

    echo ""
    echo -e "${GREEN}✓ Configuration saved to $CONFIG_FILE${NC}"
    echo ""
    echo -e "${BLUE}Build configuration:${NC}"
    echo -e "  Target: ${GREEN}$TARGET${NC}"
    echo ""
    echo -e "${YELLOW}Next steps:${NC}"
    echo -e "  1. Run ${GREEN}make build${NC} to compile for ${GREEN}$TARGET${NC}"
    echo -e "  2. Run ${GREEN}make config${NC} again to change target"
    echo ""
}

# Main execution
print_header
print_current_config
select_target
save_config

exit 0
